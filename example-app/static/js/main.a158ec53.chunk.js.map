{"version":3,"sources":["Diagram.js","Graph.js","App.js","index.js"],"names":["Diagram","real_time","statistics","coils","discrete","xmlns","width","height","viewBox","id","refX","refY","orient","overflow","d","fillRule","stroke","strokeWidth","strokeLinejoin","fill","fillOpacity","strokeOpacity","transform","r","cy","cx","markerEnd","ry","rx","manual_control_load","net_battery_current","style","lineHeight","x","y","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","pv_power","load_power","trimNumber","Math","abs","battery_voltage","battery_charging_power","battery_soc","day_night","n","places","toFixed","replace","pageOffset","seriesOffset","pv","battery","load","Graph","log","useState","page","setPage","canvasRef","useRef","useEffect","current","ctx","getContext","pixelWidth","devicePixelRatio","pixelHeight","maxVal","ceil","indices","Object","values","map","v","indexOf","vals","i","flat","max","getMaxVal","duration","gutterSize","innerWidth","innerHeight","yScale","xScale","translate","strokeRect","beginPath","moveTo","lineTo","lineWidth","length","font","textAlign","fillText","toString","lastTime","Date","timeStart","formatter","Intl","DateTimeFormat","timeStyle","format","now","graphParams","drawLine","onClick","ref","dataOffset","colour","point","delta","strokeStyle","App","data","setData","dataLog","setDataLog","fetchData","interval_id","setInterval","clearInterval","newPoint","status","date_time","pv_voltage","pv_current","battery_charging_current","load_voltage","load_current","className","htmlFor","readOnly","value","charging_status","pv_voltage_status","max_pv_voltage_today","min_pv_voltage_today","flex","max_battery_voltage_today","min_battery_voltage_today","battery_temperature","charging_phase","battery_status","battery_status_voltage","charger_temperature","fault","running","generated_energy_today","generated_energy_this_month","generated_energy_this_year","total_generated_energy","consumed_energy_today","consumed_energy_this_month","consumed_energy_this_year","total_consumed_energy","href","fetch","process","then","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a158ec53.chunk.js","sourcesContent":["\nexport default function Diagram ({ real_time, statistics, coils, discrete }) {\n\n   return (\n      <svg\n         xmlns=\"http://www.w3.org/2000/svg\"\n         width={750.696}\n         height={452.367}\n         viewBox=\"0 0 198.622 119.689\"\n       >\n         <defs>\n           <marker\n             id=\"prefix__c\"\n             refX={0}\n             refY={0}\n             orient=\"auto\"\n             overflow=\"visible\"\n           >\n             <path\n               d=\"M-1.926-1.21L1.352-.005l-3.278 1.206a2.05 2.05 0 000-2.411z\"\n               fillRule=\"evenodd\"\n               stroke=\"#000\"\n               strokeWidth={0.1875}\n               strokeLinejoin=\"round\"\n             />\n           </marker>\n           <marker\n             orient=\"auto\"\n             refY={0}\n             refX={0}\n             id=\"prefix__b\"\n             overflow=\"visible\"\n           >\n             <path\n               d=\"M-1.926-1.21L1.352-.005l-3.278 1.206a2.05 2.05 0 000-2.411z\"\n               fillRule=\"evenodd\"\n               stroke=\"#000\"\n               strokeWidth={0.1875}\n               strokeLinejoin=\"round\"\n             />\n           </marker>\n           <marker\n             orient=\"auto\"\n             refY={0}\n             refX={0}\n             id=\"prefix__a\"\n             overflow=\"visible\"\n           >\n             <path\n               d=\"M-1.926-1.21L1.352-.005l-3.278 1.206a2.05 2.05 0 000-2.411z\"\n               fillRule=\"evenodd\"\n               stroke=\"#000\"\n               strokeWidth={0.1875}\n               strokeLinejoin=\"round\"\n             />\n           </marker>\n         </defs>\n         <path\n           fill=\"#002\"\n           fillOpacity={0.651}\n           stroke=\"#000\"\n           strokeLinejoin=\"bevel\"\n           strokeOpacity={0.711}\n           d=\"M34.67 35.983h71.815v52.161H34.67z\"\n           transform=\"matrix(.31867 0 .12235 .31867 4.709 23.045)\"\n         />\n         <path\n           fill=\"#00f\"\n           stroke=\"#ff0\"\n           strokeWidth={3}\n           strokeLinejoin=\"bevel\"\n           d=\"M43.089 26.458h71.815v52.161H43.089z\"\n           transform=\"matrix(.31867 0 .12235 .31867 4.709 23.045)\"\n         />\n         <path\n           d=\"M60.854 26.458V78.62M79.224 26.08v52.35M97.782 27.025V78.43M42.522 45.735h72.383M43.278 62.555h71.816\"\n           fill=\"none\"\n           stroke=\"#ff0\"\n           strokeWidth={3}\n           transform=\"matrix(.31867 0 .12235 .31867 4.709 23.045)\"\n         />\n         <g transform=\"translate(56.813 7.427) scale(.77114)\">\n           <path\n             fill=\"#ccc\"\n             fillOpacity={0.651}\n             stroke=\"#000\"\n             strokeWidth={1.561}\n             strokeLinejoin=\"bevel\"\n             strokeOpacity={0.711}\n             d=\"M45.124 31.887h36.425v19.881H45.124z\"\n           />\n           <path fill=\"green\" d=\"M50.129 47.319h22.384v2.224H50.129z\" />\n           <circle r={0.861} cy={40.65} cx={73.973} fill=\"#00f\" />\n           <circle cx={52.418} cy={37.426} r={1.039} fill=\"#0f0\" />\n           <circle r={1.039} cy={37.426} cx={55.593} fill=\"#0f0\" />\n         </g>\n         <path\n           d=\"M38.837 47.937h29.057\"\n           fill=\"none\"\n           stroke=\"#000\"\n           strokeWidth={3}\n           markerEnd=\"url(#prefix__a)\"\n           transform=\"translate(14.737 -5.714)\"\n         />\n         <path\n           d=\"M108.687 47.937h29.057\"\n           fill=\"none\"\n           stroke=\"#000\"\n           strokeWidth={3}\n           markerEnd=\"url(#prefix__b)\"\n           transform=\"translate(14.737 -5.714)\"\n         />\n         <g transform=\"translate(14.737 1.165)\" stroke=\"#000\">\n           <ellipse\n             ry={7.149}\n             rx={7.717}\n             cy={33.777}\n             cx={155.48}\n             fill={coils.manual_control_load?\"#ff0\":\"#fff\"}\n             strokeWidth={0.5}\n             strokeLinejoin=\"bevel\"\n           />\n           <path\n             d=\"M155.456 26.776a7.358 7.358 0 00-7.35 7.358c.342 2.747 1.284 3.75 3.173 5.822l.835 1.088v8.797h6.244v-8.797l1.244-1.183c1.764-1.93 3.22-2.639 3.22-5.727a7.358 7.358 0 00-7.357-7.358z\"\n             fill=\"none\"\n             strokeWidth={2.124}\n             strokeLinejoin=\"bevel\"\n           />\n           <path\n             d=\"M152.521 48.048l5.67-1.52M152.521 46.175l5.67-1.52M152.521 44.302l5.67-1.52M152.521 42.803l5.67-1.519\"\n             fill=\"none\"\n             strokeWidth={0.849}\n           />\n           <path\n             d=\"M153.142 40.987l-1.749-6.526\"\n             fill=\"none\"\n             strokeWidth={0.265}\n           />\n           <path d=\"M157.64 40.984l1.904-6.52\" fill=\"none\" strokeWidth={0.276} />\n           <path\n             d=\"M151.393 34.46c.027.003.083.034.081.007-.009-.104-.219-.326-.236-.52-.044-.48.287-.98.732-1.158.167-.066.412-.076.59-.118.228-.052.238-.046.45.048.016.007.036.01.047.023.31.4.466.87.52 1.37.02.196.017.394.023.591.001.044-.018.342-.07.378-.206.137-.357-.17-.402-.307-.061-.183-.048-.22-.048-.402 0-.715.34-1.019.992-1.252.165-.059.395-.12.567-.07.199.056.396.177.473.377.09.232.282 1.408-.284 1.181-.137-.055-.148-.108-.236-.236-.048-.07-.111-.133-.142-.212a1.31 1.31 0 01.071-1.134c.052-.097.2-.156.284-.213.033-.022.058-.054.094-.07.111-.051.31-.066.425-.072.326-.017.174.011.426.095.045.015.099.002.141.024.222.11.484.565.591.78a.924.924 0 01.047.613c-.004.016.01.034 0 .048-.01.014-.032.014-.047.023-.135.081-.328.076-.425-.07-.375-.562-.296-.997.189-1.442.338-.31 1.216-.37 1.512.024.251.335.298 1.077.07 1.417-.015.024-.05.027-.07.048-.036.035-.056.085-.095.118-.012.01-.032-.004-.047 0-.028.007-.043.047-.071.047-.187 0-.213-.315-.26-.496-.193-.754.293-1.618 1.063-1.796.201-.046.669-.067.85.024.168.084.201.32.26.496.015.045-.007.095 0 .142.009.042.042.076.048.118.021.152.007.319.023.472.019.174.06.346.071.52.015.236-.007.475-.023.709a.351.351 0 01-.048.142c-.005.01-.024.034-.023.023.005-.096.025-.19.038-.286\"\n             fill=\"none\"\n             strokeWidth={0.265}\n           />\n         </g>\n         <path\n           d={statistics.net_battery_current<0?\"M90.902 90.417v-29.057\":\"M90.902 56.36v29.057\"}\n           fill=\"none\"\n           stroke=\"#000\"\n           strokeWidth={3}\n           markerEnd=\"url(#prefix__c)\"\n           transform=\"translate(14.737 -5.714)\"\n         />\n         <text\n           style={{\n             lineHeight: 1.25,\n           }}\n           x={43.845}\n           y={40.595}\n           fontWeight={400}\n           fontSize={9}\n           fontFamily=\"Algerian\"\n           letterSpacing={0}\n           wordSpacing={0}\n           strokeWidth={0.265}\n           transform=\"translate(14.737 -5.714)\"\n         >\n            <tspan x={43.845} y={40.595}>\n               { real_time.pv_power } W\n            </tspan>\n         </text>\n         <text\n           y={40.595}\n           x={114.149}\n           style={{\n             lineHeight: 1.25,\n           }}\n           fontWeight={400}\n           fontSize={9}\n           fontFamily=\"Algerian\"\n           letterSpacing={0}\n           wordSpacing={0}\n           strokeWidth={0.265}\n           transform=\"translate(14.737 -5.714)\"\n         >\n            <tspan y={40.595} x={114.149}>\n               { real_time.load_power } W\n            </tspan>\n         </text>\n         <text\n           style={{\n             lineHeight: 1.25,\n           }}\n           x={101.298}\n           y={74.159}\n           fontWeight={400}\n           fontSize={9}\n           fontFamily=\"Algerian\"\n           letterSpacing={0}\n           wordSpacing={0}\n           strokeWidth={0.265}\n           transform=\"translate(14.737 -5.714)\"\n         >\n            <tspan x={101.298} y={74.159}>\n               { trimNumber(statistics.net_battery_current < 0 ? Math.abs(real_time.battery_voltage * statistics.net_battery_current) : real_time.battery_charging_power) } W\n            </tspan>\n         </text>\n         <g>\n           <path\n             fill=\"#999\"\n             stroke=\"#000\"\n             strokeWidth={0.26}\n             strokeLinejoin=\"bevel\"\n             d=\"M90.61 88.739h30.088v17.699H90.61z\"\n           />\n           <path\n             stroke=\"#000\"\n             strokeWidth={0.4}\n             strokeLinejoin=\"bevel\"\n             d=\"M91.815 85.48h2.422v3.103h-2.422z\"\n           />\n           <path\n             stroke=\"#000\"\n             strokeWidth={0.4}\n             strokeLinejoin=\"bevel\"\n             d=\"M91.815 85.48h2.422v3.103h-2.422zM116.397 85.48h2.422v3.103h-2.422z\"\n           />\n           <path\n             fill=\"#fff\"\n             stroke=\"#000\"\n             strokeWidth={0.5}\n             strokeLinejoin=\"bevel\"\n             d=\"M92.608 90.802h26.326v13.764H92.608z\"\n           />\n           <path fill=\"#0f0\" d={`M92.832 90.884h${real_time.battery_soc * .25897}v13.418H92.832z`} />\n           <path\n             fill=\"none\"\n             stroke=\"#000\"\n             strokeWidth={0.5}\n             strokeLinejoin=\"bevel\"\n             d=\"M92.608 90.802h26.326v13.764H92.608z\"\n           />\n         </g>\n         { !discrete.day_night &&\n            <g transform=\"matrix(.6832 0 0 .6832 26.148 1.212)\">\n            <circle r={7.918} cy={17.09} cx={23.788} fill=\"#ff0\" />\n            <path\n               d=\"M10.067 17.09h4.158M33.35 17.09h4.158M23.788 3.37v4.158M23.788 26.653v4.158M33.49 7.388l-2.94 2.94M17.026 23.852l-2.94 2.94M33.49 26.792l-2.94-2.94M17.026 10.328l-2.94-2.94\"\n               fill=\"none\"\n               stroke=\"#ff0\"\n            />\n            </g>\n         }\n         { discrete.day_night &&\n            <g transform=\"matrix(.6832 0 0 .6832 26.148 1.212)\">\n               <circle cx={23.788} cy={17.09} r={7.918} fill=\"#ff0\" />\n               <path d=\"M21.304 24.609a7.918 7.918 0 01-5.208-9.395 7.918 7.918 0 018.949-5.941l-1.257 7.817z\" />\n            </g>\n         }\n      </svg>\n   );\n}\n\nfunction trimNumber (n, places = 2) {\n   if (n === 0) return \"0\";\n   return n.toFixed(places).replace(/[.0]+$/, \"\");\n}","import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst pageOffset = [\"voltage\",\"current\",\"power\"];\r\nconst seriesOffset = {\r\n    pv: 1,\r\n    battery: 4,\r\n    load: 7,\r\n};\r\n\r\n/**\r\n *\r\n * @param {object} param0\r\n * @param {any[]} param0.log\r\n */\r\nexport default function Graph ({ log }) {\r\n    const [ page, setPage ] = useState(\"voltage\");\r\n    /** @type {import(\"react\").MutableRefObject<HTMLCanvasElement>} */\r\n    const canvasRef = useRef();\r\n\r\n    const width = 400;\r\n    const height = 300;\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current) {\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n            const pixelWidth = width * devicePixelRatio;\r\n            const pixelHeight = height * devicePixelRatio;\r\n\r\n            canvasRef.current.width = pixelWidth;\r\n            canvasRef.current.height = pixelHeight;\r\n\r\n            const maxVal = Math.ceil(getMaxVal(log, page));\r\n            const duration = 60 * 60 * 1000; // 1 hour\r\n\r\n            const gutterSize = 20 * devicePixelRatio;\r\n            const innerWidth = pixelWidth - 2 * gutterSize;\r\n            const innerHeight = pixelHeight - 2 * gutterSize;\r\n\r\n            const yScale = innerHeight / maxVal;\r\n            const xScale = innerWidth / duration;\r\n\r\n            ctx.translate(gutterSize, gutterSize);\r\n\r\n            ctx.strokeRect(0,0, innerWidth, innerHeight);\r\n\r\n            // Horizontal Grid lines\r\n            ctx.beginPath();\r\n            for (let i = 0; i <= maxVal; i++) {\r\n                ctx.moveTo(0, innerHeight - i * yScale);\r\n                ctx.lineTo(innerWidth, innerHeight - i * yScale);\r\n            }\r\n            ctx.lineWidth = 0.5;\r\n            ctx.stroke();\r\n\r\n            if (log.length < 1) {\r\n                return;\r\n            }\r\n\r\n            // Axis Labels\r\n            const fontSize = 9 * devicePixelRatio;\r\n            ctx.font = `${fontSize}pt sans-serif`;\r\n            ctx.textAlign = \"right\";\r\n            ctx.fillText(\"0\", -0.5 * fontSize, innerHeight);\r\n            ctx.fillText(maxVal.toString(), -0.5 * fontSize, 0);\r\n            const lastTime = new Date(log[log.length - 1][0]);\r\n            const timeStart = new Date(+lastTime - duration);\r\n            const formatter = new Intl.DateTimeFormat([], { timeStyle: \"short\" });\r\n            ctx.fillText(formatter.format(lastTime), innerWidth, innerHeight + fontSize * 1.2);\r\n            ctx.textAlign = \"left\";\r\n            ctx.fillText(formatter.format(timeStart), 0, innerHeight + fontSize * 1.2);\r\n\r\n            const now = Date.now();\r\n\r\n            // Data Lines\r\n            const graphParams = { innerWidth, innerHeight, xScale, yScale, duration };\r\n            drawLine(ctx, log, now, graphParams, seriesOffset.pv        + pageOffset.indexOf(page), \"#ff0000\");\r\n            drawLine(ctx, log, now, graphParams, seriesOffset.battery   + pageOffset.indexOf(page), \"#00ff00\");\r\n            drawLine(ctx, log, now, graphParams, seriesOffset.load      + pageOffset.indexOf(page), \"#0000ff\");\r\n        }\r\n    }, [log, page]);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setPage(\"voltage\")} style={{fontWeight:page===\"voltage\"?\"bold\":\"normal\"}}>Voltage</button>\r\n            <button onClick={() => setPage(\"current\")} style={{fontWeight:page===\"current\"?\"bold\":\"normal\"}}>Current</button>\r\n            <button onClick={() => setPage(\"power\")} style={{fontWeight:page===\"power\"?\"bold\":\"normal\"}}>Power</button>\r\n            <canvas ref={canvasRef} style={{ width, height }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction drawLine(ctx, log, now, graphParams, dataOffset, colour) {\r\n    const { innerWidth, innerHeight, xScale, yScale, duration } = graphParams;\r\n    ctx.beginPath();\r\n    for (const point of log) {\r\n        const d = new Date(point[0]);\r\n        const delta = now - +d;\r\n        if (delta < duration) {\r\n            ctx.lineTo(innerWidth - delta * xScale, innerHeight - point[dataOffset] * yScale);\r\n        }\r\n        else {\r\n            ctx.moveTo(innerWidth - delta * xScale, innerHeight - point[dataOffset] * yScale);\r\n        }\r\n    }\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = colour;\r\n    ctx.stroke();\r\n}\r\n\r\nfunction getMaxVal (log, page) {\r\n    const indices = Object.values(seriesOffset).map(v => v + pageOffset.indexOf(page));\r\n    const vals = log.map(d => indices.map(i => d[i])).flat();\r\n    return Math.max(...vals);\r\n}","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Diagram from './Diagram';\nimport Graph from './Graph';\n\nconst endpoint = process.env.REACT_APP_API_ENDPOINT;\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [dataLog, setDataLog] = useState([]);\n\n  useEffect(fetchData, []);\n\n  useEffect(() => {\n    const interval_id = setInterval(fetchData, 30 * 1000);\n\n    return () => clearInterval(interval_id);\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      const newPoint = [\n        data.status.date_time,\n        data.real_time.pv_voltage,\n        data.real_time.pv_current,\n        data.real_time.pv_power,\n        data.real_time.battery_voltage,\n        data.real_time.battery_charging_current,\n        data.real_time.battery_charging_power,\n        data.real_time.load_voltage,\n        data.real_time.load_current,\n        data.real_time.load_power,\n      ];\n\n      setDataLog(log => [ ...log, newPoint ]);\n    }\n  }, [data]);\n\n  if (!data) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"real_time\">\n        <fieldset>\n          <legend>Solar Information</legend>\n          <label htmlFor=\"pv_power\">Solar Power (W)</label>\n          <input readOnly id=\"pv_power\" value={data.real_time.pv_power} />\n          <label htmlFor=\"pv_voltage\">Solar Voltage (V)</label>\n          <input readOnly id=\"pv_voltage\" value={data.real_time.pv_voltage} />\n          <label htmlFor=\"pv_current\">Solar Current (A)</label>\n          <input readOnly id=\"pv_current\" value={data.real_time.pv_current} />\n          <label htmlFor=\"pv_voltage_status\">Solar Status</label>\n          <input readOnly id=\"pv_voltage_status\" value={data.status.charging_status.pv_voltage_status} />\n          <label htmlFor=\"max_pv_voltage_today\">Max Voltage (V)</label>\n          <input readOnly id=\"max_pv_voltage_today\" value={data.statistics.max_pv_voltage_today} />\n          <label htmlFor=\"min_pv_voltage_today\">Min Voltage (V)</label>\n          <input readOnly id=\"min_pv_voltage_today\" value={data.statistics.min_pv_voltage_today} />\n        </fieldset>\n        <fieldset style={{flex:2}}>\n          <legend>Battery Information</legend>\n          <label htmlFor=\"battery_voltage\">Battery Voltage (V)</label>\n          <input readOnly id=\"battery_voltage\" value={data.real_time.battery_voltage} />\n          <label htmlFor=\"battery_charging_current\">Battery Current (A)</label>\n          <input readOnly id=\"battery_charging_current\" value={data.real_time.battery_charging_current} />\n          <label htmlFor=\"battery_charging_power\">Battery Power (W)</label>\n          <input readOnly id=\"battery_charging_power\" value={data.real_time.battery_charging_power} />\n          <label htmlFor=\"max_battery_voltage_today\">Max Voltage (V)</label>\n          <input readOnly id=\"max_battery_voltage_today\" value={data.statistics.max_battery_voltage_today} />\n          <label htmlFor=\"min_battery_voltage_today\">Min Voltage (V)</label>\n          <input readOnly id=\"min_battery_voltage_today\" value={data.statistics.min_battery_voltage_today} />\n          <label htmlFor=\"battery_temperature\">Battery Temp (°C)</label>\n          <input readOnly id=\"battery_temperature\" value={data.real_time.battery_temperature} />\n          <label htmlFor=\"battery_soc\">Battery SOC (%)</label>\n          <input readOnly id=\"battery_soc\" value={data.real_time.battery_soc} />\n          <label htmlFor=\"charging_phase\">Charging Status</label>\n          <input readOnly id=\"charging_phase\" value={data.status.charging_status.charging_phase} />\n          <label htmlFor=\"battery_status_voltage\">Battery Status</label>\n          <input readOnly id=\"battery_status_voltage\" value={data.status.battery_status.battery_status_voltage} />\n        </fieldset>\n        <fieldset>\n          <legend>DC Load Information</legend>\n          <label htmlFor=\"load_current\">Load Current (A)</label>\n          <input readOnly id=\"load_current\" value={data.real_time.load_current} />\n          <label htmlFor=\"load_voltage\">Load Voltage (V)</label>\n          <input readOnly id=\"load_voltage\" value={data.real_time.load_voltage} />\n          <label htmlFor=\"load_power\">Load Power (W)</label>\n          <input readOnly id=\"load_power\" value={data.real_time.load_power} />\n          <label htmlFor=\"manual_load_control\">Load Status</label>\n          <input readOnly id=\"manual_load_control\" value={data.coils.manual_control_load?\"ON\":\"OFF\"} />\n        </fieldset>\n        <fieldset>\n          <legend>Controller Information</legend>\n          <label htmlFor=\"charger_temperature\">Device Temperature (°C)</label>\n          <input readOnly id=\"charger_temperature\" value={data.real_time.charger_temperature} />\n          <label htmlFor=\"running\">Device Status</label>\n          <input readOnly id=\"running\" value={data.status.charging_status.fault?\"FAULT\":(data.status.charging_status.running?\"RUNNING\":\"STANDBY\")} />\n          <label htmlFor=\"date_time\">Date/Time</label>\n          <input readOnly id=\"date_time\" value={data.status.date_time} />\n        </fieldset>\n      </div>\n      <div className=\"lower-panel\">\n        <div className=\"energy\">\n          <fieldset>\n            <legend>Energy Generated (kWh)</legend>\n            <label htmlFor=\"generated_energy_today\">Daily</label>\n            <input readOnly id=\"generated_energy_today\" value={data.statistics.generated_energy_today} />\n            <label htmlFor=\"generated_energy_this_month\">Monthly</label>\n            <input readOnly id=\"generated_energy_this_month\" value={data.statistics.generated_energy_this_month} />\n            <label htmlFor=\"generated_energy_this_year\">Annual</label>\n            <input readOnly id=\"generated_energy_this_year\" value={data.statistics.generated_energy_this_year} />\n            <label htmlFor=\"total_generated_energy\">Total</label>\n            <input readOnly id=\"total_generated_energy\" value={data.statistics.total_generated_energy} />\n          </fieldset>\n          <fieldset>\n            <legend>Energy Consumed (kWh)</legend>\n            <label htmlFor=\"consumed_energy_today\">Daily</label>\n            <input readOnly id=\"consumed_energy_today\" value={data.statistics.consumed_energy_today} />\n            <label htmlFor=\"consumed_energy_this_month\">Monthly</label>\n            <input readOnly id=\"consumed_energy_this_month\" value={data.statistics.consumed_energy_this_month} />\n            <label htmlFor=\"consumed_energy_this_year\">Annual</label>\n            <input readOnly id=\"consumed_energy_this_year\" value={data.statistics.consumed_energy_this_year} />\n            <label htmlFor=\"total_consumed_energy\">Total</label>\n            <input readOnly id=\"total_consumed_energy\" value={data.statistics.total_consumed_energy} />\n          </fieldset>\n        </div>\n        <div className=\"diagram\">\n          <Diagram { ...data } />\n        </div>\n        <div className=\"graph\">\n          <Graph log={dataLog} />\n        </div>\n      </div>\n      <p>Clone on <a href=\"https://github.com/IJMacD/epsolar-app\">GitHub</a>.</p>\n    </div>\n  );\n\n  function fetchData() {\n    fetch(endpoint).then(r => r.json()).then(setData);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}